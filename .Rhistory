time_province_df <- read_tsv("data/time_data_augmented.tsv")
time_province_df <- time_province_df %>%
group_by(province) %>%
summarise(confirmed = max(confirmed_time_province),
released = max(confirmed_time_province),
deceased = max(deceased_time_province))
province_df <- province_df %>%
left_join(time_province_df, by = "province")
# PCA of regional data
province_pca <- province_df %>%
select_if(is.numeric) %>%
prcomp(center = TRUE, scale. = TRUE)
# Variance explained by each component
province_pca %>% broom::tidy("pcs") #92% explained by two components? nice
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>% broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = confirmed)) +
geom_point()
city_df <- read_tsv("data/city_data_augmented.tsv")
province_df <- city_df %>%
group_by(province) %>%
summarise_at(vars(elementary_school_count:nursing_home_count), sum)
# Get province confirmed and non confirmed
time_province_df <- read_tsv("data/time_data_augmented.tsv")
time_province_df <- time_province_df %>%
group_by(province) %>%
summarise(confirmed = max(confirmed_time_province),
released = max(confirmed_time_province),
deceased = max(deceased_time_province))
province_df <- province_df %>%
left_join(time_province_df, by = "province")
View(province_df)
# PCA of regional data
province_pca <- province_df %>%
select_if(is.numeric) %>%
prcomp(center = TRUE, scale. = TRUE)
# Variance explained by each component
province_pca %>% broom::tidy("pcs") #92% explained by two components? nice
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>% broom::augment(province_df)
View(province_pca_augment)
View(province_df)
test <- province_df %>%
pivot_longer(c(-confirmed, -province), names_to = "variable", values_to = "value")
ggplot(test) +
geom_jitter(aes(value, confirmed, colour=variable),) +
geom_smooth(aes(value, confirmed, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
test <- province_df %>%
pivot_longer(c(-deceased, -province), names_to = "variable", values_to = "value")
ggplot(test) +
geom_jitter(aes(value, confirmed, colour=variable),) +
geom_smooth(aes(value, confirmed, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
ggplot(test) +
geom_jitter(aes(value, deceased, colour=province),) +
geom_smooth(aes(value, deceased, colour=province), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
View(test)
test <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(confirmed))
test <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
View(test)
test <- province_df %>%
pivot_longer(c(-confirmed, -province),
names_to = "variable",
values_to = "value") %>%
filter(confirmed > 0) %>%
arrange(desc(confirmed))
ggplot(test) +
geom_jitter(aes(value, confirmed, colour=variable),) +
geom_smooth(aes(value, confirmed, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
View(test)
test <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
test <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
View(test)
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Percentage cover (%)", y = "Number of individuals (N)")
View(test)
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "N Deceased")
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
# PCA of regional data
province_pca <- province_df %>%
select_if(is.numeric) %>%
prcomp(center = TRUE, scale. = TRUE)
# Variance explained by each component
province_pca %>% broom::tidy("pcs") #92% explained by two components? nice
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>% broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = confirmed)) +
geom_point()
test <- province_df %>%
pivot_longer(c(-confirmed, -province),
names_to = "variable",
values_to = "value") %>%
filter(confirmed > 0) %>%
arrange(desc(confirmed))
ggplot(test) +
geom_jitter(aes(value, confirmed, colour=variable),) +
geom_smooth(aes(value, confirmed, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
test <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
ggplot(test) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
test <- province_df %>%
pivot_longer(c(-released, -province),
names_to = "variable",
values_to = "value") %>%
filter(released > 0) %>%
arrange(desc(released))
ggplot(test) +
geom_jitter(aes(value, released, colour=variable),) +
geom_smooth(aes(value, released, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
deceased_cor <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
ggplot(deceased_cor) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
# PCA of regional data
province_pca <- province_df %>%
select_if(is.numeric) %>%
prcomp(center = TRUE, scale. = TRUE)
# Variance explained by each component
province_pca %>% broom::tidy("pcs") #92% explained by two components? nice
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>% broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = confirmed)) +
geom_point()
View(province_pca)
View(province_df)
# PCA of regional data
province_pca <- province_df %>%
select(-confirmed, -released, -deceased)
# PCA of regional data
province_pca <- province_df %>%
select(-confirmed, -released, -deceased) %>%
select_if(is.numeric) %>%
prcomp(center = TRUE, scale. = TRUE)
# Variance explained by each component
province_pca %>% broom::tidy("pcs") #92% explained by two components? nice
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = confirmed)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = deceased)) +
geom_point()
View(city_df)
# PCA of regional data
city_pca <- city_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# Variance explained by each component
city_pca %>% broom::tidy("pcs") #92% explained by two components? nice
# Putting the non-numeric columns back
city_pca_augment <- city_pca %>%
broom::augment(city_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = deceased)) +
geom_point()
city_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
size = division)) +
geom_point()
city_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = division)) +
geom_point()
# Clear workspace
# ------------------------------------------------------------------------------
rm(list = ls())
# Load libraries
# ------------------------------------------------------------------------------
library(tidyverse)
library(ggplot2)
# Define functions
# ------------------------------------------------------------------------------
source(file = "R/99_project_functions.R")
# WIP
# ------------------------------------------------------------------------------
city_df <- read_tsv("data/city_data_augmented.tsv")
province_df <- city_df %>%
group_by(province) %>%
summarise_at(vars(elementary_school_count:nursing_home_count), sum)
# Get province confirmed and non confirmed
time_province_df <- read_tsv("data/time_data_augmented.tsv")
time_province_df <- time_province_df %>%
group_by(province) %>%
summarise(confirmed = max(confirmed_time_province),
released = max(confirmed_time_province),
deceased = max(deceased_time_province))
province_df <- province_df %>%
left_join(time_province_df, by = "province")
############ CORRELATION PLOTS ########################
deceased_cor <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
ggplot(deceased_cor) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
# PCA of regional data
city_pca <- city_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
city_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
city_pca_augment <- city_pca %>%
broom::augment(city_df)
city_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = division)) +
geom_point()
# PCA of regional data
province_pca <- province_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
province_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = division)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = province)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = province)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = province,
size = confirmed)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
label = province,
size = confirmed)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
label = province,
size = confirmed)) +
geom_point() +
geom_label()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
label = province,
size = confirmed)) +
geom_point() +
geom_label()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = province,
size = confirmed)) +
geom_point() +
geom_label()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = province,
size = confirmed)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = confirmed,
size = confirmed)) +
geom_point()
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = confirmed,
size = confirmed)) +
geom_point() +
guides(size = FALSE)
View(province_df)
View(province_df)
# PCA of regional data
province_pca <- province_df %>%
select_at(vars(elementary_school_count:confirmed)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
province_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = confirmed,
size = confirmed)) +
geom_point() +
guides(size = FALSE)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = diseased,
size = disesed)) +
geom_point() +
guides(size = FALSE)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = disease,
size = disease)) +
geom_point() +
guides(size = FALSE)
View(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = deceased,
size = deceased)) +
geom_point() +
guides(size = FALSE)
# PCA of regional data
province_pca <- province_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
View(province_df)
# REMOVE IN FUTURE. Check variance explained for each pca
province_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = deceased,
size = deceased)) +
geom_point() +
guides(size = FALSE)
# PCA of regional data
province_pca <- province_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
province_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = deceased,
size = deceased)) +
geom_point() +
guides(size = FALSE)
# PCA of regional data
city_pca <- city_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
city_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
city_pca_augment <- city_pca %>%
broom::augment(city_df)
city_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = division)) +
geom_point()
deceased_cor <- province_df %>%
pivot_longer(c(-deceased, -province),
names_to = "variable",
values_to = "value") %>%
filter(deceased > 0) %>%
arrange(desc(deceased))
ggplot(deceased_cor) +
geom_jitter(aes(value, deceased, colour=variable),) +
geom_smooth(aes(value, deceased, colour=variable), method=lm) +
facet_wrap(~variable, scales="free") +
labs(x = "Values", y = "Death count")
# PCA of regional data
city_pca <- city_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
city_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
city_pca_augment <- city_pca %>%
broom::augment(city_df)
city_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = division)) +
geom_point()
# PCA of regional data
province_pca <- province_df %>%
select_at(vars(elementary_school_count:nursing_home_count)) %>%
prcomp(center = TRUE, scale. = TRUE)
# REMOVE IN FUTURE. Check variance explained for each pca
province_pca %>% broom::tidy("pcs")
# Putting the non-numeric columns back
province_pca_augment <- province_pca %>%
broom::augment(province_df)
province_pca_augment %>%
ggplot(aes(x = .fittedPC1,
y = .fittedPC2,
color = deceased,
size = deceased)) +
geom_point() +
guides(size = FALSE)
