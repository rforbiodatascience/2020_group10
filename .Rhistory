select(confirmed) %>%
quantile()
# Quantile of confirmed cases
q_conf <- city_conf_df %>%
select(confirmed) %>%
quantile(confirmed)
# Quantile of confirmed cases
q_conf <- city_conf_df %>%
select(confirmed) %>%
map(quantile(.))
# Quantile of confirmed cases
q_conf <- city_conf_df %>%
select(confirmed) %>%
map(quantile(.))
library(reshape2)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
install.packages("tidyverse")
install.packages("tidyverse")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
?as.data.frame
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
# Convert quantile to vector list
q_conf <- q_conf %>%
as_tibble(col.names = "values") %>%
pluck("values")
# Quantile of confirmed cases
q_conf <- city_conf_df %>%
select(confirmed) %>%
map(quantile)
# Convert quantile to vector list
q_conf <- q_conf %>%
as_tibble(col.names = "values") %>%
pluck("values")
# Quantile of confirmed cases
q_conf <- city_conf_df %>%
select(confirmed) %>%
map(quantile)
View(q_conf)
q_conf <- q_conf %>%
as_tibble() %>%
pluck("values")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
# Quantile of confirmed cases
q_conf <- city_conf_df %>%
select(confirmed) %>%
map(quantile)
View(q_conf)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
library(rgdal)
install.packages("rgdal")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages("rgdal")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/09_ann_model.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/09_ann_model.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/09_ann_model.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/09_ann_model.R', echo=TRUE)
?as.matrix
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/05_model_case_type.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/10_model_most_visited.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/10_model_most_visited.R', echo=TRUE)
git status
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/06_model_patient_route.R', echo=TRUE)
styler:::style_selection()
install.packages("tidyverse")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages(viridis)
install.packages("viridis")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages("mapproj")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages("rgdal")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages("plotly")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages("maptools")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
install.packages("tidyverse")
install.packages("tidyverse")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/05_model_case_type.R', echo=TRUE)
library(shiny); runApp('R/04_shiny_app.R')
install.packages(c("geosphere", "shiny"))
install.packages(c("geosphere", "shiny"))
library(shiny); runApp('R/04_shiny_app.R')
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/05_model_case_type.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
# Tidy map data
spdf_fortified <- broom::tidy(
south_korea,
region = "name"
)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
View(cases_number)
View(cases_number_ploty)
?detach
detach(tidyverse)
install.packages(c("ggrepel", "patchwork"))
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
install.packages(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
tidyverse_conflicts()
# Load libraries ---------------------------------------------------------------
library(tidyverse)
tidyverse_conflicts()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
tidyverse_conflicts()
detach(package:maps)
detach(package:mapproj)
tidyverse_conflicts()
detach(package:tidyverse)
tidyverse_conflicts()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/08_model_pca.R', echo=TRUE)
tidyverse_conflicts()
conflict_prefer("purrr", "mapproj")
conflict_prefer("purrr", "mapproj")
?conflictRules
tidyverse_conflicts()
?geom_bar
git status
install.packages("styler")
styler:::style_selection()
# Stratification by sex
disease_gender <- time_df %>%
select(c(date, sex, confirmed_time_gender)) %>%
group_by(date, confirmed_time_gender, sex) %>%
summarise() %>%
drop_na()
# Stratified by age
disease_age_plot <- disease_age %>%
ggplot(
aes(x = date, y = confirmed_time_age, color = age)
) +
geom_line(
na.rm = TRUE
) +
labs(
x = "Month",
y = "Tests",
title = "Confirmed tests of COVID-19 in 2020 - by age",
caption = "Data from Korea Centers for Disease Control & Prevention (2020)",
color = "Age Group"
) +
scale_x_date(
date_labels = "%B",
date_breaks = "month"
) +
theme(legend.position = "bottom")
deceased_gender %>%
ggplot(
aes(x = date, y = confirmed_time_gender, colour = sex)
) +
geom_line(
na.rm = TRUE,
size = 0.7
) +
labs(
x = "Month",
y = "Tests",
title = "Confirmed tests of COVID-19 in 2020 - by gender",
caption = "Data from Korea Centers for Disease Control & Prevention (2020)"
) +
scale_x_date(
date_labels = "%B",
date_breaks = "month"
)
diseased_gender <- time_df %>%
select(c(date, sex, confirmed_time_gender)) %>%
group_by(date, deceased_time_gender, sex) %>%
summarise() %>%
drop_na()
# Clear workspace ------------------------------------------------------------------------------
rm(list = ls())
# Load libraries ------------------------------------------------------------------------------
library(tidyverse)
# Define functions ------------------------------------------------------------------------------
source(file = "R/99_project_functions.R")
# Read the data ------------------------------------------------------------------------------
time_df <- read_tsv("data/time_data_augmented.tsv")
# Wrangle the data ------------------------------------------------------------------------------
time_df <- time_df %>%
filter(date > ymd(20200120))
library(lubridate)
# Wrangle the data ------------------------------------------------------------------------------
time_df <- time_df %>%
filter(date > ymd(20200120))
# Overall disease progress
disease_progress <- time_df %>%
select(c(date, sex, test, negative, confirmed)) %>%
pivot_wider(values_fn = list(confirmed = summary_fun), names_from = sex) %>%
pivot_longer(c(test, confirmed, negative), names_to = "key", values_to = "value")
# Stratification by sex
confirmed_gender <- time_df %>%
select(c(date, sex, confirmed_time_gender)) %>%
group_by(date, confirmed_time_gender, sex) %>%
summarise() %>%
drop_na()
diseased_gender <- time_df %>%
select(c(date, sex, confirmed_time_gender)) %>%
group_by(date, deceased_time_gender, sex) %>%
summarise() %>%
drop_na()
diseased_gender <- time_df %>%
select(c(date, sex, confirmed_time_gender)) %>%
group_by(date, deceased_time_gender, sex) %>%
summarise() %>%
drop_na()
View(time_df)
diseased_gender <- time_df %>%
select(c(date, sex, deceased_time_gender)) %>%
group_by(date, deceased_time_gender, sex) %>%
summarise() %>%
drop_na()
# Stratification by age
disease_age <- time_df %>%
select(c(date, age, confirmed_time_age)) %>%
group_by(date, confirmed_time_age, age) %>%
summarise() %>%
drop_na()
# Stratified by gender
confirmed_gender_plot <- confirmed_gender %>%
ggplot(
aes(x = date, y = confirmed_time_gender, colour = sex)
) +
geom_line(
na.rm = TRUE,
size = 0.7
) +
labs(
x = "Month",
y = "Tests",
title = "Confirmed tests of COVID-19 in 2020 - by gender",
caption = "Data from Korea Centers for Disease Control & Prevention (2020)"
) +
scale_x_date(
date_labels = "%B",
date_breaks = "month"
)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
ggsave(
filename = "results/13_disease_progress.png",
plot = disease_progress_plot
)
ggsave(
filename = "results/13_confirmed_gender.png",
plot = confirmed_gender_plot
)
ggsave(
filename = "results/13_deceased_gender.png",
plot = deceased_gender_plot
)
ggsave(
filename = "results/13_disease_age.png",
plot = disease_age_plot
)
ggsave(
filename = "results/13_deceased_gender.png",
plot = deceased_gender_plot
)
diseased_gender_plot <- deceased_gender %>%
ggplot(
aes(x = date, y = deceased_time_gender, colour = sex)
) +
geom_line(
na.rm = TRUE,
size = 0.7
) +
labs(
x = "Month",
y = "Tests",
title = "COVID-19 deaths in 2020 - by gender",
caption = "Data from Korea Centers for Disease Control & Prevention (2020)"
) +
scale_x_date(
date_labels = "%B",
date_breaks = "month"
)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/13_model_disease_progress.R', echo=TRUE)
styler:::style_selection()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/14_exposure_model.R', echo=TRUE)
styler:::style_selection()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/14_model_exposure.R', echo=TRUE)
styler:::style_selection()
styler:::style_selection()
styler:::style_selection()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/15_model_searchtrends.R', echo=TRUE)
styler:::style_selection()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/15_model_searchtrends.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/15_model_searchtrends.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/15_model_searchtrends.R', echo=TRUE)
# Plot the data with annotations
trend_plot <- new_cases_coronavirus %>%
ggplot(aes(date)) +
geom_segment(annotation_upper, mapping = aes(x = x, y = 0, xend = x, yend = 775), colour = "grey") +
geom_vline(vertical_lines, mapping = aes(xintercept = x), colour = "grey") +
geom_text_repel(data = annotation_upper, mapping = aes(x = x, y = 1000, label = label), size = 2.5) +
geom_line(aes(y = value, colour = parameter)) +
facet_wrap(~parameter, scales = "free_y", nrow = 2, labeller = plot_labels) +
labs(
title = "COVID-19 cases and coronavirus search trend in South Korea",
subtitle = str_c("Number of new COVID-19 cases per day and selected events (upper panel)",
"and\nsearch activity for 'coronavirus' in the portal NAVER relative to maximum (lower panel)."),
caption = "Data from Korea Centers for Disease Control & Prevention (2020)"
) +
xlab("Time (2020)") +
ylab("") +
theme(
legend.position = "none",
plot.subtitle = element_text(size = 9)
) +
scale_x_date(date_breaks = "2 weeks", date_labels = "%d-%b")
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/15_model_searchtrends.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/15_model_searchtrends.R', echo=TRUE)
install.packages(c("ggraph", "igraph", "tidygraph"))
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/16_model_transmission.R', echo=TRUE)
styler:::style_selection()
styler:::style_selection()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/16_model_transmission.R', echo=TRUE)
styler:::style_selection()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
?labs
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
tidyverse_conflicts()
# Clear workspace -------------------------------------------------------------
rm(list = ls())
# Load libraries --------------------------------------------------------------
library(tidyverse)
# Define functions ------------------------------------------------------------
source(file = "R/99_project_functions.R")
# Load all dataset files of the Korean COVID19 Dataset ------------------------
# Get file paths for database table files
dataset_files <- list.files(path = "_raw", full.names = TRUE)
# Load table files and set filename to snake case format
dataset_tables <- dataset_files %>%
setNames(nm = snake_case(.)) %>%
map(read_csv)
# Writing all tables to the data folder
dataset_tables %>%
names(.) %>%
map(~ write_tsv(pluck(dataset_tables, .), str_c("data/", ., "_data.tsv")))
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
install.packages(keras)
install.packages("keras")
source(file = "R/09_model_city_ann.R")
source(file = "R/10_model_most_visited.R")
source(file = "R/11_model_city_clustering.R")
source(file = "R/12_model_case_fatality_age.R")
source(file = "R/13_model_disease_progress.R")
source(file = "R/14_model_exposure.R")
source(file = "R/15_model_searchtrends.R")
source(file = "R/16_model_transmission.R")
source(file = "R/17_model_subset_transmission.R")
?detachAllPackages
detach("package:maptools", unload=TRUE)
styler:::style_selection()
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
?gpclib
??gpclib
gpclibPermit()
library(maptools)
library(gpclib)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/07_model_patient_route.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/01_load.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/01_load.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source(file = "R/09_model_city_ann.R")
source(file = "R/10_model_most_visited.R")
source(file = "R/11_model_city_clustering.R")
source(file = "R/12_model_case_fatality_age.R")
source(file = "R/13_model_disease_progress.R")
source(file = "R/14_model_exposure.R")
source(file = "R/15_model_searchtrends.R")
source(file = "R/16_model_transmission.R")
source(file = "R/17_model_subset_transmission.R")
# Clear Workspace ---------------------------------------------------------
rm(list = ls())
# Load libraries ----------------------------------------------------------
library("tidyverse")
library("tidygraph")
library("ggraph")
library("igraph")
# Load functions ----------------------------------------------------------
source(file = "R/99_project_functions.R")
# Load data ---------------------------------------------------------------
transmission_df <- read_tsv(file = "data/wrangled_transmission.tsv")
# Wrangle data ------------------------------------------------------------
# Find the persons who infect 10 or more others
filtered_transmission_df <- transmission_df %>%
group_by(from) %>%
filter(n() >= 10) %>%
ungroup()
# Create nodes
nodes <- filtered_transmission_df %>%
pivot_longer(
cols = c(to, from),
names_to = "status",
values_to = "patient_id"
) %>%
mutate(age_group = case_when(
status == "from" ~ age_group_infecting,
status == "to" ~ age_group_infected
)) %>%
select(patient_id, age_group) %>%
distinct()
# Visualise data ----------------------------------------------------------
# Create graph object
graph_obj <- graph_from_data_frame(filtered_transmission_df,
vertices = nodes, directed = TRUE
) %>%
as_tbl_graph()
# Create plot with nodes and arrows as edges
zoom_transmission_plot <- ggraph(graph_obj, layout = "fr") +
geom_edge_link(aes(colour = infection_case),
arrow = arrow(length = unit(1.5, "mm")),
start_cap = circle(1, "mm"),
end_cap = circle(1, "mm"),
edge_width = 0.4
) +
geom_node_point(aes(colour = age_group), size = 2) +
labs(
title = "Transmission plot for COVID-19 for patients who infect more than 10 individuals",
subtitle = "Patients are coloured by age group for patients and transmission events by route",
color = "Age group",
caption = "Data from Korea Centers for Disease Control & Prevention (2020)"
) +
theme_graph(title_size = 16)
# Write plots and data to file --------------------------------------------
ggsave(
filename = "results/17_subset_transmission.png",
plot = zoom_transmission_plot,
width = 8,
height = 6
)
write_tsv(x = filtered_transmission_df, path = "data/wrangled_transmission_filtered.tsv")
# Detach external packages ---------------------------------------------------------------------
detach("package:igraph", unload=TRUE)
detach("package:tidygraph", unload=TRUE)
detach("package:ggraph", unload=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
# Create plot with nodes and arrows as edges
zoom_transmission_plot <- ggraph(graph_obj, layout = "fr") +
geom_edge_link(aes(colour = infection_case),
arrow = arrow(length = unit(1.5, "mm")),
start_cap = circle(1, "mm"),
end_cap = circle(1, "mm"),
edge_width = 0.4
) +
geom_node_point(aes(colour = age_group), size = 2) +
labs(
title = "Transmission plot for COVID-19 for patients who infect more than 10 individuals",
subtitle = "Patients are coloured by age group for patients and transmission events by route",
color = "Age group",
caption = "Data from Korea Centers for Disease Control & Prevention (2020)"
) +
theme_graph(title_size = 16)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/17_model_subset_transmission.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
source('~/Desktop/R for bio data scientists/Project/2020_group10/R/00_doit.R', echo=TRUE)
